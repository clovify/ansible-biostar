---
- name: Gathering ec2_facts 
  ec2_facts:
  sudo: True

- name: Read host SSH public key
  command: cat ~/.ssh/id_rsa.pub
  register: host_ssh_public_key

- name: Create dirs for codebase and dockerfiles
  file:
    path: "{{ item }}"
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: 0755
    recurse: True
  with_items:
    - "{{ host_dir_for_dockerfiles }}"
    - "{{ host_dir_for_dockerfiles }}/webapp"
    - "{{ host_dir_for_codebase }}"
  sudo: True

- name: Install git
  apt:
    name: git
    update_cache: yes
  sudo: True

- name: Clone the codebase
  git:
    repo: "{{ git_https_repo }}"
    version: "{{ git_branch }}"
    dest: "{{ host_dir_for_codebase }}"

- name: Crete logs folder
  shell: mkdir -p {{ host_dir_for_codebase }}/live/logs

- name: Copy logging file
  copy:
    src: biostar
    dest: "{{ host_dir_for_codebase }}"

- name: Copy env, requirements files
  copy:
    src: conf
    dest: "{{ host_dir_for_codebase }}"

- name: Copy the auto deployment script
  copy:
    src: continuous_deployment.sh
    dest: "{{ host_dir_for_codebase }}"
    owner: www-data
    group: www-data
    mode: 0755
  sudo: True

- name: Copy the settings file
  template:
    src: biostar/settings/production.py.j2
    dest: "{{ host_dir_for_codebase }}/biostar/settings/production.py"

- name: Copy run-update-index.sh
  template:
    src: run-update-index.sh.j2
    dest: "{{ host_dir_for_codebase }}/run-update-index.sh"
    owner: www-data
    group: www-data 
    mode: 0755
  sudo: True

- name: Copy run-webapp.sh
  template:
    src: run-webapp.sh.j2
    dest: "{{ host_dir_for_codebase }}/run-webapp.sh"
    owner: www-data
    group: www-data 
    mode: 0755
  sudo: True

- name: Copy reset-db.sh
  template:
    src: reset-db.sh.j2
    dest: "{{ host_dir_for_codebase }}/reset-db.sh"
    owner: www-data
    group: www-data 
    mode: 0755
  sudo: True

- name: Copy the Dockerfile
  template:
    src: Dockerfile.j2
    dest: "{{ host_dir_for_dockerfiles}}/webapp/Dockerfile"

- name: Copy nginx-biostar.conf
  template:
    src: nginx-biostar.conf.j2
    dest: "{{ host_dir_for_dockerfiles}}/webapp/nginx-biostar.conf"

- name: Install passlib
  pip:
    name: passlib
  sudo: True
  when: basic_auth_username is defined and basic_auth_password is defined

- name: Crete auth-basic password file
  htpasswd:
    path: "{{ host_dir_for_dockerfiles}}/webapp/biostar-auth"
    name: "{{ basic_auth_username }}"
    password: "{{ basic_auth_password }}"
  when: basic_auth_username is defined and basic_auth_password is defined

- name: Ensure Docker server is running
  service:
    name: docker
    state: started
  sudo: True

- name: Build the webapp container
  command:
    docker build -t biostar/webapp .
    chdir="{{ host_dir_for_dockerfiles}}/webapp/"
  sudo: True

- name: Run the webapp container
  docker:
    image: biostar/webapp
    name: webapp
    ports: 2222:22,80:80
    links: postgresql:pg
    volumes: "{{ host_dir_for_codebase }}:{{ container_dir_for_codebase }}"
  sudo: True