#!/bin/bash

add_update_index_to_crontab () {
    # Write the update index task to crontab

    crontab -l | grep run_update_index
    res=`echo $?`
    # If:
    # res = 0 the command is already in the cron tab
    # res = 1 the command is not in the cron tab
    if [ "$res" -eq 1 ]; then
        echo " * Adding the update index command to the crontab..."
        crontab -l | { cat; echo "*/10 * * * * {{ container_dir_for_codebase }}/run-update-index.sh"; } | crontab -

    else
        echo " * The update index command is already in the crontab..."
    fi
}

create_database () {
    # Create the database if not already existent

    echo " * Checking if the database already exists (this operation might give an error to be ignored)..."
    psql -h $PG_PORT_5432_TCP_ADDR -p $PG_PORT_5432_TCP_PORT -U {{ postgresql_username }} $DATABASE_NAME -c "SELECT id FROM users_user;"
    res=`echo $?`
    # If:
    # res = 0 the database already exists
    # res != 0 the database does not exist
    if [ "$res" -eq 1 ]; then
        echo " * Creating the database (this operation might give an error to be ignored)..."
        createdb -h $PG_PORT_5432_TCP_ADDR -p $PG_PORT_5432_TCP_PORT -U {{ postgresql_username }} $DATABASE_NAME
        newdb=0
    else
        echo " * Database alredy existent..."
        newdb=1
    fi
}

fix_nginx_config_file () {
    # Fix Nginx biostar config file adding the right domain

    echo " * Adding $BIOSTAR_HOSTNAME to Nginx site config file for Biostar..."
    sed -ri "0,/^(\s*server_name [^ \t\r\n\v\f]+ )(xxxx);$/s//\1$BIOSTAR_HOSTNAME $BIOSTAR_EXTRA_HOSTNAMES;/" /etc/nginx/sites-enabled/biostar

    if  [[ $BIOSTAR_HOSTNAME == www.* ]]
    then
        WWW="www."
        CLEAN=${BIOSTAR_HOSTNAME#${WWW}}
        echo " * Adding $CLEAN to Nginx site config file for Biostar..."
        sed -ri "0,/^(\s*server_name )(xxxx);$/s//\1$CLEAN;/" /etc/nginx/sites-enabled/biostar
        sed -ri "0,/^(\s*rewrite \^\(\.\*\) http\:\/\/)(www.xxxx)(.?1 permanent);$/s//\1www.$CLEAN\3;/" /etc/nginx/sites-enabled/biostar
    else
        CLEAN=www.$BIOSTAR_HOSTNAME
        echo " * Adding $CLEAN to Nginx site config file for Biostar..."
        sed -ri "0,/^(\s*server_name )(xxxx);$/s//\1$CLEAN;/" /etc/nginx/sites-enabled/biostar
        sed -ri "0,/^(\s*rewrite \^\(\.\*\) http\:\/\/)(www.xxxx)(.?1 permanent);$/s//\1$BIOSTAR_HOSTNAME\3;/" /etc/nginx/sites-enabled/biostar
    fi
}

cd {{ container_dir_for_codebase }}

echo " * Installing requirements..."
pip install -r conf/requirements/production.txt

echo " * Setting environment variables..."
source conf/production.env

# Create the database if not already existent
create_database

echo " * Migrating the database..."
python manage.py syncdb -v 1 --noinput
python manage.py migrate biostar.apps.users
python manage.py migrate biostar.apps.posts
python manage.py migrate

if [ "$newdb" -eq 0 ]; then
    echo " * Initializing the database..."
    python manage.py initialize_site
    #python manage.py loaddata $JSON_DATA_FIXTURE
    python manage.py rebuild_index --noinput
else
    echo " * Skipping initialization of the database..."
fi

echo " * Collectstatic..."
python manage.py collectstatic --noinput

# Add the update index command to the crontab
add_update_index_to_crontab

# Add the right domain to Nginx site config file
fix_nginx_config_file

echo " * Running waitress web server on port 8000..."
chown -R www-data:www-data /srv/biostar
exec /sbin/setuser www-data waitress-serve --port=8000 --call biostar.wsgi:white